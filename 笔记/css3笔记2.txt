边框border：橘子皮
border：border-width||border-style||border-color
border-style：none（默认值，无边框）/solid（单实线）/dashed（虚线）/dotted（点线）/double（双实线）
border-top（bottom/left/right）可单独改一边
可以合在一起写

table{border-collapse：collapse； }合并相邻边框

圆角边框：
border-radius：左上角 右上角 右下角 左下角；
写三个值，则左上，右上=左下，右下


padding内边距：边框和内容的距离
写三个值，则上，左右，下

margin外边距：上下左右

盒子实现水平居中条件：
1.必须是块级元素
2.盒子必须指定了宽度
然后给左右的外边距设置为auto，就可以使块级元素水平居中
行级元素无效


清除内外边框，为了兼容浏览器
*{margin：0；
padding：0；}
根据需要设置自己的内外边距

box-sizing：border-box，盒子大小为width，padding和border包含在内了



块级元素才有bfc
不同的bfc不会margin重叠
不与浮动产生交集
尽量不要给行内元素指定上下内外边距

外边距合并，垂直的块级盒子，以最大的为准

内嵌块元素外边距解决：
1.给外块元素加个边框
2.给父级元素加overflow：hidden；


浮动设置
float：left/right/none

子辈浮动不会压住父辈padding值

如果上浮动下不浮动，则下会飘上去
如果两浮动，则在同一行
如果下浮动上不浮动，则下不会飘上去
所以只要一个浮动，最好所有都浮动

如果块级元素添加浮动则具有行内块特性
行内元素添加浮动也具有行内块特性
行内块特性：一行可以放多个，有宽度和高度，盒子大小根据内容决定


一般不给父辈高度，由子辈内容撑开
当子辈浮动时，父辈就不会有高度
解决方法
清除浮动（闭合浮动）：
1.在有浮动的盒子后面添加一个盒子，直接属性{clear：both；}（比较少用）
2.在父辈添加{overflow：hidden/auto/scroll；}会触发bfc消除浮动
3.伪元素方法：父辈专加clearfix类（随便起）
.clearfix:after {content:"."; display：block；height：0；visibility：hidden（隐藏内容）；clear：both }
.clearfix {*zoom：1；}兼容IE6.7

4.双伪元素：父辈专加clearfix类（随便起）
.clearfix:after，.clearfix:before {content：""；display：table；}
.clearfix:after {clear：both；}
.clearfix {*zoom：1；}兼容IE6.7



定位（定位模式+边偏移=完整定位）
position：static（自动定位默认）/relative（相对定位）/absolute（绝对定位）/fixed（固定定位）
.静态定位：对边偏移无效，用于清除定位
.相对定位：以自己原来的位置进行边偏移，但是原来的位置仍然占有
.绝对定位：（如果父亲没有定位，子辈会按浏览器作为对照物）会根据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位（不占位置）
子绝父相：父占位置，子不占
.固定定位：完全脱标，不占位置，不随滚轮拉动而改变位置（如顶栏，但注意下方内容用margin-top下来点，不然会被遮盖）固定定位的盒子一定要写宽和高，除非内容撑开

加了绝对定位的盒子用margin-auto不能水平居中
要居中用变偏移直接算（left：50%；margin-left：-（自己宽度的一半）；）

绝对定位和固定定位会把元素变为行内块元素

叠放次序：
重叠的（固定，相对，绝对）定位盒子可以用z-index决定上下关系，越大越在上面，默认取值为0；取值相同，后来居上；

元素的显示与隐藏：
display：none；元素隐藏
display：block；除了有转块级元素外还有显示元素的功能（元素还在，位置保留）
visibility：hidden；隐藏元素，不保留位置 （visible显示）

overflow：
visible：默认的，超出显示
auto：只要超出容器，会显示滚动条，不超出没有
scroll：一直有滚动条
hidden：不超出的显示，超出的隐藏掉


鼠标样式：cursor：
default：默认
pointer：小手
move：移动（箭头十字架）
text：文本型（输入I）


轮廓：outline（在边框外面）：（粗细 线条 颜色）
一般用于取消外轮廓线。outline：0；

防止拖拽文本域
resize：none；


垂直居中
vertical-align：不影响块级元素，只针对行内元素和行内块元素，特别是行内块元素
baseline：基线对齐
middle：中线对齐
top：顶端对齐
bottom：底线对齐
让图片、表单、文本域与文字对齐；去除图片底边空隙（块级元素不会存在这个问题，所以也可以转为块级元素）；


溢出文字隐藏
work-break：自动换行
normal：浏览器默认换行规则
break-all：允许在单词内换行
keep-all：只能在半角空格或连字符处换行
主要处理英文单词

white-space设置或检索对象内文本显示方式，通常用来强制一行显示内容
normal：默认换行方式
nowrap：强制一行显示所有内容，知道文本结束或者遇到<br/>才换行

text-overflow文字溢出
clip：不显示省略标记（...），而是简单的剪切
ellipsis：当对象内文本溢出时显示省略标记（...）
注意一定要首先强制一行内显示，且要有overflow：hidden

精灵技术：一般都是负的


字体图标：iconfont （iconfont.cn）（icomoon.io可以将svg格式转为字体）
1.声明字体，说明有些电脑没有的字体
2.font-family：“icomoon”；要和声明的名字一样
3.添加结构span：before {content：“\数代”}（或者直接复制图标但代码不显示）

滑动门
连接a包括span，a先转块元素不能有宽度背景要padding-left撑开；span也不能有宽度；但在背景位置时要右对齐padding-right撑开一点。最后在span里写文字，自动撑开。

有行高可以不用给高


类元素和伪类选择器就是选取对象的
伪元素选择器本质上是插入一个标签/盒子


过度效果
transition：过度的属性（property；用all表示所有一起） 过度时间（duration） 运动曲线（默认是ease） 何时开始；
要写在div里而不是hover里


定位盒子居中（常用）
transform：transform（*px）；如果是百分比则以自己的宽度为标准
先绝对定位，然后left：50%再transform：transform（-50%）

transform-origin：x x；元素变化点
transform：rotate（360deg）；旋转360度 


3d变形：rotateX/rotateY/rotateZ
x左负右正
y上负下正
z里负外正

perspective：视距（父元素）眼睛到屏幕的距离，单位px。视距越大效果越不明显，近大远小，比较3d

transform：translate3d（x，y，z）z只能用px；x、y还可以用百分比


backface-visibility：hidden；不是正向面向屏幕就隐藏


animation：动画名称（自定义）动画时间 运动曲线 何时开始 播放次数 是否反向运动
@keyframes 动画名称 { } 定义动画
infinite无限循环

有多组变形，都属于transform用空格隔开


伸缩布局：
display：flex；（父元素添加）
子元素flex：1；（占一份）
min-width：*px；盒子宽度最小值（max-width）
flex-direction：column；（垂直方向分，默认为水平row；row-reverse水平翻转）

justify-content：
flex-end：位于结尾（flex-start，center）
space-between：左右接近边，中间平分空隙
space-around：都有空隙，相当于margin

align-items（单行）：垂直对齐，值一样（增加stretch值拉伸容器适合父元素高度，但是子元素不能有高度，相当于高度100%）

flex-wrap：是否换行nowrap（不换行伸缩显示）/wrap（自动换行）/wrap-reverse（翻转）

align-contend多行垂直居中

order：排序，数值越小，越在前面


validator.w3.org/unicorn/验证w3c
站长之家，压缩代码
transform-style：preserve-3d；立体感


盒子垂直居中：父辈display：table-cell；vertical-align：middle；


网页制作ico图片