console.log（）；控制台输出

在代码执行时才确认数据的类型

十六进制0x
八进制0

由于二进制存储问题，浮点数的精确值与实际有差别，所以不能判断两个浮点数是否相等

isNaN（）；判断是否为数值，false既是数值

\'转义字符
\n换行

如果字符串与数值相加，则先将数值转为字符串，然后进行拼接

查询数据类型
console.log（typeof x）；

调用toString（）方法转为字符串类型
null和undefined没有toString方法，直接用String（）方法
字符串拼接也可以将其转为字符串类型，和空字符串拼接


转换为数值
1.调用Number（）方法；如果有一个字符非数字则返回nan；true，false除外
2.调用parseInt（）方法；但是布尔类型无法转换；只要字符串有数字就直接转数字；如果字符串第一个为非数字，则返回nan
3.调用parseFloat（）方法，将数值转为浮点数；无法转换布尔类型
4.取正或者取负值显示或-0，但是+0不行，+0是拼接，但是只要字符串有非数字就无法转换

转换为布尔类型
调用Boolean（）方法，都可以转换成功，空字符，0，null和undefined为false，其他为true
！*可以转换

++i；先+1后操作

==直接判断值
===先判断类型再判断值
先&&后||


prompt（'提问内容','提示内容'）；

switch用===


break终止循环，跳出循环
continue终止本次循环，继续下次一循环

字符串的不可变性，改变不会更改原字符串，只会创建一个新的字符串
字符方法
charAt（）；获得指定位置的字符
charCodeAt（）；获得指定位置的ASCII码


document.getElementById()根据ID获取函数，只能通过document调用
如果页面上没有对应的id，则会返回null
document.getElementsByTagName()获取标签名字，可以document调用，也可以通过新找到的元素调用

document.getElementsByClassName()根据class属性获取元素，IE9后支持

document.querySelector（）获取其中一个元素
document.querySelectorAll（）获取匹配的所以元素
但是两方法都是在IE8后才支持

*.className=“class名字”

this触发事件源，即调用onclick事件的元素


在事件后面return false；可以取消默认跳转


innerHTML获取标签中内容时，会原封不动地获取到；内容有标签，会将标签当HTML形式表示出来
innerText获取内容时，会把前后的换行和空白都去掉；有标签会把内容原封不动显示


displayed；selected；checked，当选取后，这些属性是布尔值

数组名.join（）；把数组转换为字符串输出，用，进行分割。在（）内可输入进行分割的字符

自定义属性：
用getAttribute（）获得自定义属性的值
setAttribute（‘属性名’，‘属性值’）
移除属性：removeAttribute（）


parentNode 父节点 只有一个
childNodes 子节点 有很多个
children    子元素

firstChild获取第一个子节点
lastChild获取最后一个子节点
firstElementChild 获取第一个子元素
lastElementChild 获取最后一个子元素
最后两个有两个兼容性问题，只能在IE9以上用，可自己重定义函数方法

nextSibling下一个兄弟节点
previousSibling 上一个兄弟节点
nextElementSibling下一个兄弟元素
previousElementSibling 上一个兄弟元素
下两个同上


当点击按钮时使用document.write（）输出内容，会将之前的页面覆盖掉
可以用innerHTML创建元素，但是有效率问题，而且每次inner时，都要重新绘制
解决重绘问题，可以先将元素赋值到一个变量里，再用inner输出变量，但字符串过多
所以最好的方法是定义一个数组，用push在一起，最后用数组名.join（‘’）输出

创建元素createElement（）；
节点.appendChild（）在节点后面追加节点，放在最后面；如果页面已存在这个节点，则先移除再接上

x.insertBefore（要插入元素，x.children【0】（插入x后第一个节点））把元素插入页面指定位置
y.replaceChild（新节点，替换的节点）



addEventListener（事件类型，function（）{}）可多次执行注册多个事件处理函数，但这个有浏览器兼容性问题IE9
attachEvent（on事件类型，function（）{}）但只有旧版本支持

如果想移除事件，就不能用匿名函数


e事件参数或是window.event
e.target是真正触发的事件的对象；在就浏览器版本中用srcElement代替
e.currentTarget事件处理函数所属的对象

clientX，clientY获取鼠标离可视区域的坐标
pageX，pageY鼠标在当前页面的位置，有兼容性问题

scrollLeft，scrollTop页面滚动出去的距；body获取，有浏览器兼容问题时可用documentElement获取


offsetLeft，offsetTop距离offsetParent的距离；offsetParent是距离其最近的定位父元素


e.preventDefault（）取消默认行为的执行，但在老版本不支持，老版本用e.returnValue=false。直接用return false；是最好的


window.onload{}页面加载完成后再执行

setTimeout（要执行的函数，间隔的时间单位是毫秒）定时炸弹，隔一段时间执行，并且只能执行一次
setInterval（要执行的函数，间隔的时间单位是毫秒）闹钟:隔一段时间执行，可重复执行
var一个变量作为定时器的标识，clearTimeout（标识）取消定时器的执行


x.style.left获取的是标签中设置的值，如果没设置则一直为0
可以用offsetLeft只读属性

history.forward（）前进一个页面，history.back（）后退一个页面
history.go（1）前进；history.go（-1）后退

clientLeft，clientTop边框的大小
clientWidth，clientHetght指内容和内边框的大小