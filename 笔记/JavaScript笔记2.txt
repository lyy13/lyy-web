查看MDN
构造函数的原型方法
函数.prototype.方法

bind（）改变函数的this，并返回一个新的函数（不调用函数）
call（）改变函数的this，直接调用函数

apply（null，数组名）：将数组展开传给每一项

定时器中的this指向的是window；在方法后可加.bind（this）

闭包：在一个作用域中可以访问另一个作用域的变量
特点：延展了作用域的范围

正则表达式：（正则表达式测试工具）
var reg = /\d+/gi;
\d数字，g全局匹配，i不分大小写
\D匹配任意非数字的字符
\w匹配字母或数字或下划线
\W匹配任意不是字母，数字，下划线
\s匹配任意的空白符
\S匹配任意非空白符
.匹配所以单个字符（包括空格）但不包括换行

^以谁开始$以谁结束；没有这两符号即表明包含

*可以重复0到多次
+可以重复1到多次
？可以重复0或1次
{n}重复n次
{n，}至少n位；但没有最多多少位
{n，m}重复n到m次

【】表示匹配其中任一字符，或的意思【0-9】【a-z】【A-Z】
【^】里面有^则是非的意思
\转义符
| 或的意思
（）选择

方法：
1.regexp对象
test（）匹配
exec（）提取 只返回一个匹配到的结果，如果没有返回结果，则为null

2.string对象
match（）提取，可提取多个内容；
replace（）替换；只能替换掉第一个查找到的内容：例将空格去掉replace（/\s/g,''）
split（）切割（括号里是切割的标识）如：split（' '）.join('')
search（）

var reg=new RegExp（模式，flag参数）（第一个参数是正则的自定义规则，第二个参数是g全局变量/i忽略大小写）
var reg= /模式/flag；

onchance事件是当文本改变并失去焦点的时候触发
可以用onkeydown（文本还没输出）或者onkeyup（）
onblur（）光标离开的时候

trim（）去除前后的空格

